module.exports = {

"[project]/node_modules/clsx/dist/clsx.mjs [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clsx": (()=>clsx),
    "default": (()=>__TURBOPACK__default__export__)
});
function r(e) {
    var t, f, n = "";
    if ("string" == typeof e || "number" == typeof e) n += e;
    else if ("object" == typeof e) if (Array.isArray(e)) {
        var o = e.length;
        for(t = 0; t < o; t++)e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
    } else for(f in e)e[f] && (n && (n += " "), n += f);
    return n;
}
function clsx() {
    for(var e, t, f = 0, n = "", o = arguments.length; f < o; f++)(e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
    return n;
}
const __TURBOPACK__default__export__ = clsx;
}}),
"[project]/node_modules/class-variance-authority/dist/index.mjs [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Copyright 2022 Joe Bell. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */ __turbopack_context__.s({
    "cva": (()=>cva),
    "cx": (()=>cx)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-rsc] (ecmascript)");
;
const falsyToString = (value)=>typeof value === "boolean" ? `${value}` : value === 0 ? "0" : value;
const cx = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["clsx"];
const cva = (base, config)=>(props)=>{
        var _config_compoundVariants;
        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
        const { variants, defaultVariants } = config;
        const getVariantClassNames = Object.keys(variants).map((variant)=>{
            const variantProp = props === null || props === void 0 ? void 0 : props[variant];
            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];
            if (variantProp === null) return null;
            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);
            return variants[variant][variantKey];
        });
        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{
            let [key, value] = param;
            if (value === undefined) {
                return acc;
            }
            acc[key] = value;
            return acc;
        }, {});
        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{
            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;
            return Object.entries(compoundVariantOptions).every((param)=>{
                let [key, value] = param;
                return Array.isArray(value) ? value.includes({
                    ...defaultVariants,
                    ...propsWithoutUndefined
                }[key]) : ({
                    ...defaultVariants,
                    ...propsWithoutUndefined
                })[key] === value;
            }) ? [
                ...acc,
                cvClass,
                cvClassName
            ] : acc;
        }, []);
        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
    };
}}),
"[project]/node_modules/fumadocs-core/dist/link.js (client reference/proxy) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.js [app-rsc] (ecmascript)");
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call the default export of [project]/node_modules/fumadocs-core/dist/link.js <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/fumadocs-core/dist/link.js <module evaluation>", "default");
}}),
"[project]/node_modules/fumadocs-core/dist/link.js (client reference/proxy)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.js [app-rsc] (ecmascript)");
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call the default export of [project]/node_modules/fumadocs-core/dist/link.js from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/fumadocs-core/dist/link.js", "default");
}}),
"[project]/node_modules/fumadocs-core/dist/link.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$link$2e$js__$28$client__reference$2f$proxy$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/fumadocs-core/dist/link.js (client reference/proxy) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$link$2e$js__$28$client__reference$2f$proxy$29$__ = __turbopack_context__.i("[project]/node_modules/fumadocs-core/dist/link.js (client reference/proxy)");
;
__turbopack_context__.n(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$link$2e$js__$28$client__reference$2f$proxy$29$__);
}}),
"[project]/node_modules/fumadocs-core/dist/chunk-XMCPKVJQ.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
// src/utils/path.ts
__turbopack_context__.s({
    "joinPath": (()=>joinPath),
    "slash": (()=>slash),
    "splitPath": (()=>splitPath)
});
function splitPath(path) {
    return path.split("/").filter((p)=>p.length > 0);
}
function joinPath(...paths) {
    const out = [];
    const parsed = paths.flatMap(splitPath);
    while(parsed.length > 0){
        switch(parsed[0]){
            case "..":
                out.pop();
                break;
            case ".":
                break;
            default:
                out.push(parsed[0]);
        }
        parsed.shift();
    }
    return out.join("/");
}
function slash(path) {
    const isExtendedLengthPath = path.startsWith("\\\\?\\");
    if (isExtendedLengthPath) {
        return path;
    }
    return path.replaceAll("\\", "/");
}
;
}}),
"[project]/node_modules/fumadocs-core/dist/chunk-MLKGABMK.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "__export": (()=>__export)
});
var __defProp = Object.defineProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
;
}}),
"[project]/node_modules/fumadocs-core/dist/source/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FileSystem": (()=>file_system_exports),
    "createGetUrl": (()=>createGetUrl),
    "createPageTreeBuilder": (()=>createPageTreeBuilder),
    "getSlugs": (()=>getSlugs),
    "loadFiles": (()=>loadFiles),
    "loader": (()=>loader),
    "parseFilePath": (()=>parseFilePath),
    "parseFolderPath": (()=>parseFolderPath)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/fumadocs-core/dist/chunk-XMCPKVJQ.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$MLKGABMK$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/fumadocs-core/dist/chunk-MLKGABMK.js [app-rsc] (ecmascript)");
;
;
// src/source/page-tree-builder.ts
var group = /^\((?<name>.+)\)$/;
var link = /^(?:\[(?<icon>[^\]]+)])?\[(?<name>[^\]]+)]\((?<url>[^)]+)\)$/;
var separator = /^---(?:\[(?<icon>[^\]]+)])?(?<name>.+)---|^---$/;
var rest = "...";
var restReversed = "z...a";
var extractPrefix = "...";
var excludePrefix = "!";
function isPageFile(node) {
    return "data" in node && node.format === "page";
}
function buildAll(nodes, ctx, skipIndex) {
    const output = [];
    const folders = [];
    for (const node of [
        ...nodes
    ].sort((a, b)=>a.file.name.localeCompare(b.file.name))){
        if (isPageFile(node)) {
            const localized = ctx.localeStorage?.read((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinPath"])(node.file.dirname, node.file.name), "page");
            const treeNode = buildFileNode(localized ?? node, ctx);
            if (node.file.name === "index") {
                if (!skipIndex) output.unshift(treeNode);
            } else {
                output.push(treeNode);
            }
        }
        if ("children" in node) {
            folders.push(buildFolderNode(node, false, ctx));
        }
    }
    output.push(...folders);
    return output;
}
function resolveFolderItem(folder, item, ctx, idx, addedNodePaths) {
    if (item === rest || item === restReversed) return item;
    let match = separator.exec(item);
    if (match?.groups) {
        const node = {
            $id: `${folder.file.path}#${idx}`,
            type: "separator",
            icon: ctx.options.resolveIcon?.(match.groups.icon),
            name: match.groups.name
        };
        return [
            ctx.options.attachSeparator?.(node) ?? node
        ];
    }
    match = link.exec(item);
    if (match?.groups) {
        const { icon, url, name } = match.groups;
        const isRelative = url.startsWith("/") || url.startsWith("#") || url.startsWith(".");
        const node = {
            type: "page",
            icon: ctx.options.resolveIcon?.(icon),
            name,
            url,
            external: !isRelative
        };
        return [
            ctx.options.attachFile?.(node) ?? node
        ];
    }
    const isExcept = item.startsWith(excludePrefix), isExtract = item.startsWith(extractPrefix);
    let filename = item;
    if (isExcept) {
        filename = item.slice(excludePrefix.length);
    } else if (isExtract) {
        filename = item.slice(extractPrefix.length);
    }
    const path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinPath"])(folder.file.path, filename);
    const itemNode = ctx.storage.readDir(path) ?? ctx.localeStorage?.read(path, "page") ?? ctx.storage.read(path, "page");
    if (!itemNode) return [];
    addedNodePaths.add(itemNode.file.path);
    if (isExcept) return [];
    if ("children" in itemNode) {
        const node = buildFolderNode(itemNode, false, ctx);
        return isExtract ? node.children : [
            node
        ];
    }
    return [
        buildFileNode(itemNode, ctx)
    ];
}
function buildFolderNode(folder, isGlobalRoot, ctx) {
    const metaPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinPath"])(folder.file.path, "meta");
    const meta = ctx.localeStorage?.read(metaPath, "meta") ?? ctx.storage.read(metaPath, "meta");
    const indexPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinPath"])(folder.file.path, "index");
    const indexFile = ctx.localeStorage?.read(indexPath, "page") ?? ctx.storage.read(indexPath, "page");
    const isRoot = meta?.data.root ?? isGlobalRoot;
    const index = indexFile ? buildFileNode(indexFile, ctx) : void 0;
    const addedNodePaths = /* @__PURE__ */ new Set();
    let children;
    if (!meta?.data.pages) {
        children = buildAll(folder.children, ctx, !isRoot);
    } else {
        const resolved = meta.data.pages.flatMap((item, i)=>{
            return resolveFolderItem(folder, item, ctx, i, addedNodePaths);
        });
        const restNodes = buildAll(folder.children.filter((node2)=>!addedNodePaths.has(node2.file.path)), ctx, !isRoot);
        const nodes = resolved?.flatMap((item)=>{
            if (item === rest) {
                return restNodes;
            } else if (item === restReversed) {
                return restNodes.reverse();
            }
            return item;
        });
        children = nodes ?? restNodes;
    }
    const node = {
        type: "folder",
        name: meta?.data.title ?? index?.name ?? // resolve folder groups like (group_name)
        pathToName(group.exec(folder.file.name)?.[1] ?? folder.file.name),
        icon: ctx.options.resolveIcon?.(meta?.data.icon) ?? index?.icon,
        root: meta?.data.root,
        defaultOpen: meta?.data.defaultOpen,
        description: meta?.data.description,
        index: isRoot || indexFile && !addedNodePaths.has(indexFile.file.path) ? index : void 0,
        children,
        $id: folder.file.path,
        $ref: !ctx.options.noRef ? {
            metaFile: meta?.file.path
        } : void 0
    };
    return ctx.options.attachFolder?.(node, folder, meta) ?? node;
}
function buildFileNode(file, ctx) {
    const item = {
        $id: file.file.path,
        type: "page",
        name: file.data.data.title ?? pathToName(file.file.name),
        description: file.data.data.description,
        icon: ctx.options.resolveIcon?.(file.data.data.icon),
        url: ctx.getUrl(file.data.slugs, ctx.locale),
        $ref: !ctx.options.noRef ? {
            file: file.file.path
        } : void 0
    };
    return ctx.options.attachFile?.(item, file) ?? item;
}
function build(ctx) {
    const root = ctx.storage.root();
    const folder = buildFolderNode(root, true, ctx);
    return {
        $id: ctx.locale ? ctx.locale : "root",
        name: folder.name,
        children: folder.children
    };
}
function createPageTreeBuilder(getUrl) {
    return {
        build (options) {
            return build({
                options,
                builder: this,
                storage: options.storage,
                getUrl
            });
        },
        buildI18n ({ i18n, ...options }) {
            const entries = i18n.languages.map((lang)=>{
                const tree = build({
                    options,
                    getUrl,
                    builder: this,
                    locale: lang,
                    storage: options.storages[i18n.defaultLanguage],
                    localeStorage: options.storages[lang]
                });
                return [
                    lang,
                    tree
                ];
            });
            return Object.fromEntries(entries);
        }
    };
}
function pathToName(name) {
    const result = [];
    for (const c of name){
        if (result.length === 0) result.push(c.toLocaleUpperCase());
        else if (c === "-") result.push(" ");
        else result.push(c);
    }
    return result.join("");
}
// src/source/path.ts
function parseFilePath(path) {
    const segments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitPath"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["slash"])(path));
    const dirname = segments.slice(0, -1).join("/");
    let name = segments.at(-1) ?? "";
    let ext = "";
    const dotIdx = name.lastIndexOf(".");
    if (dotIdx !== -1) {
        ext = name.substring(dotIdx);
        name = name.substring(0, dotIdx);
    }
    return {
        dirname,
        name,
        path: segments.join("/"),
        ext,
        flattenedPath: [
            dirname,
            name
        ].filter((p)=>p.length > 0).join("/")
    };
}
function parseFolderPath(path) {
    const segments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitPath"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["slash"])(path));
    const base = segments.at(-1) ?? "";
    return {
        dirname: segments.slice(0, -1).join("/"),
        name: base,
        path: segments.join("/")
    };
}
function normalizePath(path) {
    const segments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitPath"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["slash"])(path));
    if (segments[0] === "." || segments[0] === "..") throw new Error("It must not start with './' or '../'");
    return segments.join("/");
}
// src/source/file-system.ts
var file_system_exports = {};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$MLKGABMK$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["__export"])(file_system_exports, {
    Storage: ()=>Storage
});
var Storage = class {
    constructor(){
        this.files = /* @__PURE__ */ new Map();
        this.folders = /* @__PURE__ */ new Map();
        this.rootFolder = {
            file: parseFolderPath(""),
            children: []
        };
        this.folders.set("", this.rootFolder);
    }
    /**
   * @param path - flattened path
   * @param format - file format
   */ read(path, format) {
        return this.files.get(`${path}.${format}`);
    }
    readDir(path) {
        return this.folders.get(path);
    }
    root() {
        return this.rootFolder;
    }
    write(path, format, data) {
        const node = {
            format,
            file: parseFilePath(path),
            data
        };
        this.makeDir(node.file.dirname);
        this.readDir(node.file.dirname)?.children.push(node);
        this.files.set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinPath"])(node.file.dirname, `${node.file.name}.${node.format}`), node);
    }
    list() {
        return [
            ...this.files.values()
        ];
    }
    makeDir(path) {
        const segments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitPath"])(path);
        for(let i = 0; i < segments.length; i++){
            const segment = segments.slice(0, i + 1).join("/");
            if (this.folders.has(segment)) continue;
            const folder = {
                file: parseFolderPath(segment),
                children: []
            };
            this.folders.set(folder.file.path, folder);
            this.readDir(folder.file.dirname)?.children.push(folder);
        }
    }
};
// src/source/load-files.ts
function loadFiles(files, options) {
    const { transformers = [] } = options;
    const storage = new Storage();
    for (const file of files){
        const parsedPath = normalizePath(file.path);
        if (file.type === "page") {
            const slugs = file.slugs ?? options.getSlugs(parseFilePath(parsedPath));
            storage.write(parsedPath, file.type, {
                slugs,
                data: file.data
            });
        }
        if (file.type === "meta") {
            storage.write(parsedPath, file.type, file.data);
        }
    }
    for (const transformer of transformers){
        transformer({
            storage,
            options
        });
    }
    return storage;
}
function loadFilesI18n(files, options) {
    const parser = options.i18n.parser === "dir" ? dirParser : dotParser;
    const storages = {};
    for (const lang of options.i18n.languages){
        storages[lang] = loadFiles(files.flatMap((file)=>{
            const [path, locale] = parser(normalizePath(file.path));
            if ((locale ?? options.i18n.defaultLanguage) === lang) {
                return {
                    ...file,
                    path
                };
            }
            return [];
        }), options);
    }
    return storages;
}
function dirParser(path) {
    const parsed = path.split("/");
    if (parsed.length >= 2) return [
        parsed.slice(1).join("/"),
        parsed[0]
    ];
    return [
        path
    ];
}
function dotParser(path) {
    const segs = path.split("/");
    if (segs.length === 0) return [
        path
    ];
    const name = segs[segs.length - 1].split(".");
    if (name.length >= 3) {
        const locale = name.splice(name.length - 2, 1)[0];
        if (locale.length > 0 && !/\d+/.test(locale)) {
            segs[segs.length - 1] = name.join(".");
            return [
                segs.join("/"),
                locale
            ];
        }
    }
    return [
        path
    ];
}
// src/source/loader.ts
function indexPages(storages, getUrl, i18n) {
    const defaultLanguage = i18n?.defaultLanguage ?? "";
    const map = /* @__PURE__ */ new Map();
    const fileMapped = /* @__PURE__ */ new WeakMap();
    for (const item of storages[defaultLanguage].list()){
        if (item.format === "meta") {
            fileMapped.set(item, fileToMeta(item));
        }
        if (item.format === "page") {
            const page = fileToPage(item, getUrl, defaultLanguage);
            fileMapped.set(item, page);
            map.set(`${defaultLanguage}.${page.slugs.join("/")}`, page);
            if (!i18n) continue;
            const path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinPath"])(item.file.dirname, item.file.name);
            for (const lang of i18n.languages){
                if (lang === defaultLanguage) continue;
                const localizedItem = storages[lang].read(path, "page");
                const localizedPage = fileToPage(localizedItem ?? item, getUrl, lang);
                if (localizedItem) {
                    fileMapped.set(localizedItem, localizedPage);
                }
                map.set(`${lang}.${localizedPage.slugs.join("/")}`, localizedPage);
            }
        }
    }
    return {
        pages: map,
        getResultFromFile (file) {
            return fileMapped.get(file);
        }
    };
}
function createGetUrl(baseUrl, i18n) {
    const baseSlugs = baseUrl.split("/");
    return (slugs, locale)=>{
        const hideLocale = i18n?.hideLocale ?? "never";
        let urlLocale;
        if (hideLocale === "never") {
            urlLocale = locale;
        } else if (hideLocale === "default-locale" && locale !== i18n?.defaultLanguage) {
            urlLocale = locale;
        }
        const paths = [
            ...baseSlugs,
            ...slugs
        ];
        if (urlLocale) paths.unshift(urlLocale);
        return `/${paths.filter((v1)=>v1.length > 0).join("/")}`;
    };
}
function getSlugs(info) {
    return [
        ...info.dirname.split("/"),
        info.name
    ].filter(// filter empty folder names and file groups like (group_name)
    (v1, i, arr)=>{
        if (v1.length === 0) return false;
        return i === arr.length - 1 ? v1 !== "index" : !/^\(.+\)$/.test(v1);
    });
}
function loader(options) {
    return createOutput(options);
}
function createOutput(options) {
    if (!options.url && !options.baseUrl) {
        console.warn("`loader()` now requires a `baseUrl` option to be defined.");
    }
    const { source, slugs: slugsFn = getSlugs } = options;
    const getUrl = options.url ?? createGetUrl(options.baseUrl ?? "/", options.i18n);
    const files = typeof source.files === "function" ? source.files() : source.files;
    const storages = options.i18n ? loadFilesI18n(files, {
        i18n: {
            ...options.i18n,
            parser: options.i18n.parser ?? "dot"
        },
        transformers: options.transformers,
        getSlugs: slugsFn
    }) : {
        "": loadFiles(files, {
            transformers: options.transformers,
            getSlugs: slugsFn
        })
    };
    const walker = indexPages(storages, getUrl, options.i18n);
    const builder = createPageTreeBuilder(getUrl);
    let pageTree;
    return {
        _i18n: options.i18n,
        get pageTree () {
            if (options.i18n) {
                pageTree ??= builder.buildI18n({
                    storages,
                    resolveIcon: options.icon,
                    i18n: options.i18n,
                    ...options.pageTree
                });
            } else {
                pageTree ??= builder.build({
                    storage: storages[""],
                    resolveIcon: options.icon,
                    ...options.pageTree
                });
            }
            return pageTree;
        },
        set pageTree (v){
            pageTree = v;
        },
        getPageByHref (href, { dir = "" } = {}) {
            const pages = Array.from(walker.pages.values());
            const [value, hash] = href.split("#", 2);
            if (value.startsWith(".") && (value.endsWith(".md") || value.endsWith(".mdx"))) {
                const hrefPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$core$2f$dist$2f$chunk$2d$XMCPKVJQ$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinPath"])(dir, value);
                const target2 = pages.find((item)=>item.file.path === hrefPath);
                if (target2) return {
                    page: target2,
                    hash
                };
            }
            const target = pages.find((item)=>item.url === value);
            if (target) return {
                page: target,
                hash
            };
        },
        getPages (language = options.i18n?.defaultLanguage ?? "") {
            const pages = [];
            for (const key of walker.pages.keys()){
                if (key.startsWith(`${language}.`)) pages.push(walker.pages.get(key));
            }
            return pages;
        },
        getLanguages () {
            const list = [];
            if (!options.i18n) return list;
            for (const language of options.i18n.languages){
                list.push({
                    language,
                    pages: this.getPages(language)
                });
            }
            return list;
        },
        getPage (slugs = [], language = options.i18n?.defaultLanguage ?? "") {
            return walker.pages.get(`${language}.${slugs.join("/")}`);
        },
        getNodeMeta (node, language = options.i18n?.defaultLanguage ?? "") {
            const ref = node.$ref?.metaFile;
            if (!ref) return;
            const file = storages[language].list().find((v1)=>v1.format === "meta" && v1.file.path === ref);
            if (file) return walker.getResultFromFile(file);
        },
        getNodePage (node, language = options.i18n?.defaultLanguage ?? "") {
            const ref = node.$ref?.file;
            if (!ref) return;
            const file = storages[language].list().find((v1)=>v1.format === "page" && v1.file.path === ref);
            if (file) return walker.getResultFromFile(file);
        },
        getPageTree (locale) {
            if (options.i18n) {
                return this.pageTree[locale ?? options.i18n.defaultLanguage];
            }
            return this.pageTree;
        },
        // @ts-expect-error -- ignore this
        generateParams (slug, lang) {
            if (options.i18n) {
                return this.getLanguages().flatMap((entry)=>entry.pages.map((page)=>({
                            [slug ?? "slug"]: page.slugs,
                            [lang ?? "lang"]: entry.language
                        })));
            }
            return this.getPages().map((page)=>({
                    [slug ?? "slug"]: page.slugs
                }));
        }
    };
}
function fileToMeta(file) {
    return {
        file: file.file,
        data: file.data
    };
}
function fileToPage(file, getUrl, locale) {
    return {
        file: file.file,
        url: getUrl(file.data.slugs, locale),
        slugs: file.data.slugs,
        data: file.data.data,
        locale
    };
}
;
}}),
"[project]/node_modules/fumadocs-mdx/dist/chunk-4LSNX4UE.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
// src/runtime/index.ts
__turbopack_context__.s({
    "_runtime": (()=>_runtime),
    "createMDXSource": (()=>createMDXSource),
    "resolveFiles": (()=>resolveFiles)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$fs__$5b$external$5d$__$28$node$3a$fs$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/node:fs [external] (node:fs, cjs)");
;
var _runtime = {
    doc (files) {
        return files.map((file)=>{
            const { default: body, frontmatter, ...exports } = file.data;
            let cachedContent;
            return {
                body,
                ...exports,
                ...frontmatter,
                get content () {
                    cachedContent ??= __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$fs__$5b$external$5d$__$28$node$3a$fs$2c$__cjs$29$__["default"].readFileSync(file.info.absolutePath).toString();
                    return cachedContent;
                },
                _exports: file.data,
                _file: file.info
            };
        });
    },
    meta (files) {
        return files.map((file)=>{
            return {
                ...file.data,
                _file: file.info
            };
        });
    },
    docs (docs, metas) {
        const parsedDocs = this.doc(docs);
        const parsedMetas = this.meta(metas);
        return {
            docs: parsedDocs,
            meta: parsedMetas,
            toFumadocsSource () {
                return createMDXSource(parsedDocs, parsedMetas);
            }
        };
    }
};
function createMDXSource(docs, meta = []) {
    return {
        files: ()=>resolveFiles({
                docs,
                meta
            })
    };
}
function resolveFiles({ docs, meta }) {
    const outputs = [];
    for (const entry of docs){
        outputs.push({
            type: "page",
            path: entry._file.path,
            data: entry
        });
    }
    for (const entry of meta){
        outputs.push({
            type: "meta",
            path: entry._file.path,
            data: entry
        });
    }
    return outputs;
}
;
}}),
"[project]/node_modules/fumadocs-mdx/dist/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$mdx$2f$dist$2f$chunk$2d$4LSNX4UE$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/fumadocs-mdx/dist/chunk-4LSNX4UE.js [app-rsc] (ecmascript)");
;
;
}}),
"[project]/node_modules/fumadocs-mdx/dist/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$mdx$2f$dist$2f$chunk$2d$4LSNX4UE$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/fumadocs-mdx/dist/chunk-4LSNX4UE.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fumadocs$2d$mdx$2f$dist$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/fumadocs-mdx/dist/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/@radix-ui/react-slot/dist/index.mjs (client reference/proxy) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Root": (()=>Root),
    "Slot": (()=>Slot),
    "Slottable": (()=>Slottable),
    "createSlot": (()=>createSlot),
    "createSlottable": (()=>createSlottable)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.js [app-rsc] (ecmascript)");
;
const Root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call Root() from the server but Root is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs <module evaluation>", "Root");
const Slot = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call Slot() from the server but Slot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs <module evaluation>", "Slot");
const Slottable = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call Slottable() from the server but Slottable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs <module evaluation>", "Slottable");
const createSlot = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call createSlot() from the server but createSlot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs <module evaluation>", "createSlot");
const createSlottable = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call createSlottable() from the server but createSlottable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs <module evaluation>", "createSlottable");
}}),
"[project]/node_modules/@radix-ui/react-slot/dist/index.mjs (client reference/proxy)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Root": (()=>Root),
    "Slot": (()=>Slot),
    "Slottable": (()=>Slottable),
    "createSlot": (()=>createSlot),
    "createSlottable": (()=>createSlottable)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.js [app-rsc] (ecmascript)");
;
const Root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call Root() from the server but Root is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs", "Root");
const Slot = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call Slot() from the server but Slot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs", "Slot");
const Slottable = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call Slottable() from the server but Slottable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs", "Slottable");
const createSlot = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call createSlot() from the server but createSlot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs", "createSlot");
const createSlottable = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call createSlottable() from the server but createSlottable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@radix-ui/react-slot/dist/index.mjs", "createSlottable");
}}),
"[project]/node_modules/@radix-ui/react-slot/dist/index.mjs [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slot$2f$dist$2f$index$2e$mjs__$28$client__reference$2f$proxy$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-slot/dist/index.mjs (client reference/proxy) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slot$2f$dist$2f$index$2e$mjs__$28$client__reference$2f$proxy$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-slot/dist/index.mjs (client reference/proxy)");
;
__turbopack_context__.n(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slot$2f$dist$2f$index$2e$mjs__$28$client__reference$2f$proxy$29$__);
}}),

};

//# sourceMappingURL=node_modules_93dda1f3._.js.map